{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Container.js","webpack:///./node_modules/reactstrap/es/Jumbotron.js","webpack:///./src/components/headline.js","webpack:///./src/components/article-preview/article-preview.module.css","webpack:///./src/pages/guides.js","webpack:///./src/components/article-preview/article-preview.js"],"names":["_excluded","propTypes","tag","fluid","oneOfType","bool","string","className","cssModule","object","props","Tag","attributes","containerClass","classes","createElement","defaultProps","PageHeadline","pagename","pageheadline","module","exports","GuidePage","posts","data","allContentfulBlogPost","edges","console","log","Fragment","pageName","pageHeadline","title","map","node","key","slug","category","article","pageQuery","ArticlePreview","styles","preview","alt","image","previewTitle","to","username","name","heroImage","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","tags"],"mappings":"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","file":"component---src-pages-guides-js-4f035529902e836833f9.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tag\", \"fluid\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Jumbotron = function Jumbotron(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      fluid = props.fluid,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, 'jumbotron', fluid ? 'jumbotron-fluid' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nJumbotron.propTypes = propTypes;\nJumbotron.defaultProps = defaultProps;\nexport default Jumbotron;","import React from 'react'\r\nimport { Container, Jumbotron } from 'reactstrap'\r\n\r\nconst PageHeadline = ({ pagename, pageheadline }) => {\r\n    return (\r\n        <Container fluid className=\"custom-font text-center\">\r\n            <Jumbotron>\r\n                <h1> {pagename}</h1>\r\n                <h2> {pageheadline} </h2>\r\n            </Jumbotron>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst BlogHeadline = ({ blogTitle, blogAuthor, blogDate }) => {\r\n    return (\r\n        <Container fluid className=\"custom-font\">\r\n            <Jumbotron>\r\n                <h1>{blogTitle}</h1>\r\n                <h2 className=\"blog-date\">{blogDate}</h2>\r\n                <h2 className=\"blog-author\">{blogAuthor}</h2>\r\n            </Jumbotron>\r\n        </Container>\r\n    )\r\n}\r\n\r\n// const Headline = ({ props }) => {\r\n//     return (\r\n//         <Parallax bgImage={myimage} blur={{ min: -5, max: 5 }}>\r\n//             <div style={{ height: 500 }}>\r\n//                 <div style={insideStyles}>Dynamic Blur</div>\r\n//             </div>\r\n//         </Parallax>\r\n//     )\r\n// }\r\n\r\nexport { PageHeadline, BlogHeadline }\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewTitle\":\"article-preview-module--previewTitle--2lKOs\",\"tag\":\"article-preview-module--tag--1jAZv\"};","import React from 'react'\r\nimport NavbarContent from '../components/navigation/navbar'\r\nimport { PageHeadline } from '../components/headline'\r\nimport ArticlePreview from '../components/article-preview/article-preview'\r\nimport { graphql } from 'gatsby'\r\nimport { Helmet } from 'react-helmet'\r\nimport '../components/base.css'\r\n\r\nconst GuidePage = ({ data }) => {\r\n    const posts = data.allContentfulBlogPost.edges\r\n    console.log(posts)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <NavbarContent />\r\n            <PageHeadline\r\n                pageName=\"Resource Guides\"\r\n                pageHeadline=\"Resource Guides curated from Projects done in the club\"\r\n            />\r\n            <Helmet title=\"iD8 - Resource Guides\" />\r\n            <div className=\"wrapper\">\r\n                <h2 className=\"section-headline\">Recent articles</h2>\r\n                <ul className=\"article-list\">\r\n                    {posts.map(({ node }) => {\r\n                        return (\r\n                            <li key={node.slug}>\r\n                                <ArticlePreview\r\n                                    category=\"blog\"\r\n                                    article={node}\r\n                                />\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default GuidePage\r\n\r\nexport const pageQuery = graphql`\r\n    query GuideQuery {\r\n        allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\r\n            edges {\r\n                node {\r\n                    title\r\n                    slug\r\n                    publishDate(formatString: \"MMMM Do, YYYY\")\r\n                    tags\r\n                    heroImage {\r\n                        fluid(\r\n                            maxWidth: 350\r\n                            maxHeight: 196\r\n                            resizingBehavior: SCALE\r\n                        ) {\r\n                            ...GatsbyContentfulFluid_tracedSVG\r\n                        }\r\n                    }\r\n                    description {\r\n                        childMarkdownRemark {\r\n                            html\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nimport styles from './article-preview.module.css'\r\n\r\nconst ArticlePreview = ({ category, article }) => {\r\n    if (category === 'team') {\r\n        return (\r\n            <div className={styles.preview}>\r\n                <Img alt=\"\" fluid={article.image.fluid} />\r\n                <h3 className={styles.previewTitle}>\r\n                    <Link to={`/${category}/${article.username}`}>\r\n                        {article.name}\r\n                    </Link>\r\n                </h3>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={styles.preview}>\r\n                <Img alt=\"\" fluid={article.heroImage.fluid} />\r\n                <h3 className={styles.previewTitle}>\r\n                    <Link to={`/${category}/${article.slug}`}>\r\n                        {article.title}\r\n                    </Link>\r\n                </h3>\r\n                <small>{article.publishDate}</small>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: article.description.childMarkdownRemark.html,\r\n                    }}\r\n                />\r\n                {article.tags &&\r\n                    article.tags.map((tag) => (\r\n                        <p className={styles.tag} key={tag}>\r\n                            {tag}\r\n                        </p>\r\n                    ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArticlePreview\r\n"],"sourceRoot":""}